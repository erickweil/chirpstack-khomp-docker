services:
  chirpstack:
    image: chirpstack/chirpstack:4
    command: -c /etc/chirpstack
    restart: unless-stopped
    volumes:
      - ./configuration/chirpstack:/etc/chirpstack
      - ./lorawan-devices:/opt/lorawan-devices
    depends_on:
      - postgres
      - rabbitmq
      - redis
    environment:
      - MQTT_BROKER_HOST=rabbitmq
      - MQTT_BROKER_USER=${MQTT_BROKER_USER}
      - MQTT_BROKER_PASSWORD=${MQTT_BROKER_PASSWORD}
      - REDIS_HOST=redis
      - POSTGRESQL_HOST=postgres
    ports:
      - "8080:8080"

  chirpstack-gateway-bridge:
    image: chirpstack/chirpstack-gateway-bridge:4
    restart: unless-stopped
    ports:
      - "1700:1700/udp"
    volumes:
      - ./configuration/chirpstack-gateway-bridge:/etc/chirpstack-gateway-bridge
    environment:
    # https://www.chirpstack.io/docs/chirpstack-gateway-bridge/configuration.html#environment-variables
      - INTEGRATION__MQTT__AUTH__GENERIC__USERNAME=${MQTT_BROKER_USER}
      - INTEGRATION__MQTT__AUTH__GENERIC__PASSWORD=${MQTT_BROKER_PASSWORD}
    depends_on:
     - rabbitmq

  # chirpstack-gateway-bridge-basicstation:
  #   image: chirpstack/chirpstack-gateway-bridge:4
  #   restart: unless-stopped
  #   command: -c /etc/chirpstack-gateway-bridge/chirpstack-gateway-bridge-basicstation-eu868.toml
  #   ports:
  #     - "3001:3001"
  #   volumes:
  #     - ./configuration/chirpstack-gateway-bridge:/etc/chirpstack-gateway-bridge
  #   depends_on:
  #     - mosquitto
    
  chirpstack-rest-api:
    image: chirpstack/chirpstack-rest-api:4
    restart: unless-stopped
    command: --server chirpstack:8080 --bind 0.0.0.0:8090 --insecure
    ports:
      - "8090:8090"
    depends_on:
      - chirpstack

  postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - ./configuration/postgresql/initdb:/docker-entrypoint-initdb.d
      - postgresqldata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=chirpstack
      - POSTGRES_PASSWORD=chirpstack
      - POSTGRES_DB=chirpstack

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --save 300 1 --save 60 100 --appendonly no
    volumes:
      - redisdata:/data

  # mosquitto:
  #   image: eclipse-mosquitto:2
  #   restart: unless-stopped
  #   ports:
  #     - "1883:1883"
  #   volumes: 
  #     - ./configuration/mosquitto/config/:/mosquitto/config/

  # https://github.com/mpolinowski/rabbitmq-mqtt-ws-docker/blob/master/docker-compose.yml
  rabbitmq:
    container_name: rabbitmq
    # image: rabbitmq:4-management
    build:
      context: .
      dockerfile: Dockerfile.rabbitmq
    # https://stackoverflow.com/questions/41330514/docker-rabbitmq-persistency
    # https://github.com/docker-library/rabbitmq/issues/392
    # if hostname is not provided, it creates a random hostname each time service is restarted.
    hostname: rabbitmq
    volumes:
      - rabbitmq-vol:/var/lib/rabbitmq
      # https://github.com/rabbitmq/rabbitmq-server/blob/main/deps/rabbit/docs/rabbitmq.conf.example
      - type: bind
        source: ./configuration/rabbitmq/rabbitmq.conf
        target: /etc/rabbitmq/rabbitmq.conf
        read_only: true
    environment:
      - MQTT_BROKER_USER=${MQTT_BROKER_USER}
      - MQTT_BROKER_PASSWORD=${MQTT_BROKER_PASSWORD}
    ports:
      # Administração web
      - 15672:15672
      # AMQP
      - 5672:5672
      # MQTT
      - 1883:1883

volumes:
  postgresqldata:
  redisdata:
  rabbitmq-vol: